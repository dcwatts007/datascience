---
title: "Client Report - Longevity of Baseball Players"
subtitle: "Unit 2 Task 3"
author: "Daniel Watts"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd 
import numpy as np
import sqlite3
from lets_plot import *

LetsPlot.setup_html(isolated_frame=True)
```


```{python}
# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
sqlite_file = 'lahmansbaseballdb.sqlite'
# this file must be in the same location as your .qmd or .py file
con = sqlite3.connect(sqlite_file)
```


## Question 1

__Write an SQL query that pulls in the the salaries table and the collegeplaying table (and any other tables you might need) and store them in pandas dataframes. Combine the dataframes to create a list of baseball players who attended BYU-Idaho. The new table should contain five columns: playerID, schoolID, salary, and the yearID/teamID associated with each salary. Print out the table in your report.__

<!-- The code chunk below can get you going, you may want to write additional code before or after it. -->

```{python}
# Include and execute your code here
q1 = """SELECT salary
          , yearID
          , teamID
          , playerID
        FROM salaries
    """
salaries = pd.read_sql_query(q1, con)
salaries.head
q2 = """SELECT playerID
        , schoolID
        FROM collegeplaying
    """
college = pd.read_sql_query(q2, con)
merged = pd.merge(salaries, college , on="playerID",how="inner")
merged.head()
# Now complete the rest of the task with python (e.g. pandas) code
byui_players=merged[merged["schoolID"]=="idbyuid"]
byui_players.head()
byui_players = byui_players[["playerID","schoolID","yearID","teamID","salary"]]

byui_players.head(10)
```

## Question 2

__Pick any two baseball teams and compare them using a metric of your choice (average salary, home runs, number of wins, etc). Be creative! Write an SQL query to read in the tables you need (similar to the tasks above), then use pandas to manipulate the data. Finally, make a graph using Lets-Plot to visualize the comparison. What do you learn?__

Boston and New York have never fielded more than one player with the either of the most common last names in America of Smith and Johnson. 


```{python}
q3="""Select playerID
        , nameLast
      From people
    """
players = pd.read_sql_query(q3,con)
q4="""Select playerID
  , teamID
  , yearID
  From salaries
  """
teams = pd.read_sql_query(q4,con)
teams.head()
nowmerged = pd.merge(players, teams, on = "playerID",how="inner")
nowmerged.head()
nowmerged = nowmerged[nowmerged['teamID'].isin(['NYA','BOS'])]
nowmerged = nowmerged[nowmerged['nameLast'].isin(["Johnson","Smith"])]
nowmerged.head()
numberName= (nowmerged.groupby(['teamID','yearID']).agg(count=('playerID','count')).reset_index())#used copilot to fix this line of code
numberName.head()
ggplot(data=numberName, mapping=aes(x='yearID',y='count',fill='teamID'))+geom_bar()
```